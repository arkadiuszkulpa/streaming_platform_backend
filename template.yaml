AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: MyAI4 Ecosystem Backend Stack - Unified backend services for streaming, shopping, gaming, and AI-powered services

Parameters:
  Environment:
    Type: String
    Description: The environment for this stack (e.g., dev, prod)
    AllowedValues:
      - dev
      - prod
    Default: dev

  # REMOVED: RapidApiKeyParameter as direct parameter
  # Now retrieved from SSM Parameter Store

Globals:
  Function:
    Timeout: 10
    Runtime: python3.12
    MemorySize: 256
    Tags:
      Environment: !Ref Environment
      Project: !Ref AWS::StackName

Resources:
  ####################################
  # SSM Parameters
  ####################################
  UserPoolIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/myai4/${Environment}/cognito/user-pool-id"
      Type: String
      Value: !Sub "${AWS::StackName}-user-pool-id"
      Description: User Pool ID for MyAI4 services

  IdentityPoolIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/myai4/${Environment}/cognito/identity-pool-id"
      Type: String
      Value: !Sub "${AWS::StackName}-identity-pool-id"
      Description: Identity Pool ID for MyAI4 services

  ####################################
  # Lambda Functions
  ####################################
  CentralizedApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "centralized_api-${AWS::StackName}"
      CodeUri: src/
      Handler: lambda_handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          # RapidAPI key will be retrieved at runtime from Secrets Manager
          RAPIDAPI_SECRET_NAME: "myai4/rapidapi/keys/oauth"
          USER_POOL_ID: !Ref UserPoolIdParameter
          IDENTITY_POOL_ID: !Ref IdentityPoolIdParameter
          USER_PROFILES_TABLE: !Ref UserProfilesTable
          SUBSCRIPTIONS_TABLE: !Ref SubscriptionsTable
          SERVICE_PREFERENCES_TABLE: !Ref ServicePreferencesTable
          USER_USAGE_TABLE: !Ref UserUsageTable
          FAMILY_GROUPS_TABLE: !Ref FamilyGroupsTable
          MOVIES_TABLE: !Ref MoviesTable
          WATCHLISTS_TABLE: !Ref WatchlistsTable
          WATCH_HISTORY_TABLE: !Ref WatchHistoryTable
          STREAMING_PROFILES_TABLE: !Ref StreamingProfilesTable
          ENVIRONMENT: !Ref Environment # Added for enhanced test diagnostics
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /centralized
            Method: ANY

  ####################################
  # API Gateway
  ####################################
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment

  ####################################
  # IAM Roles
  ####################################
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "lambda_exec_role-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess      
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/myai4/*"
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:myai4/rapidapi/keys/oauth*"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref AWS::StackName

  ####################################
  # DynamoDB Tables - MyAI4 Ecosystem
  ####################################

  # TABLE 1: AccountTable - MOVED TO INFRASTRUCTURE STACK
  # This has been moved to the infrastructure stack since it's related to authentication
  # and is created during the post-confirmation process

  # TABLE 2: Subscriptions - Cross-service subscription management
  SubscriptionsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-subscriptions-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: subscriptionId
          AttributeType: S
        - AttributeName: serviceType
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: subscriptionId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ServiceTypeIndex
          KeySchema:
            - AttributeName: serviceType
              KeyType: HASH
            - AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Ecosystem
        - Key: DataType
          Value: Subscriptions

  # TABLE 3: ServicePreferences - User preferences across all MyAI4 services
  ServicePreferencesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-service-preferences-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: serviceType
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: serviceType
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Ecosystem
        - Key: DataType
          Value: ServicePreferences

  # TABLE 4: UserUsage - Cross-service usage analytics
  UserUsageTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-user-usage-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
        - AttributeName: serviceType
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ServiceTypeIndex
          KeySchema:
            - AttributeName: serviceType
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Ecosystem
        - Key: DataType
          Value: UserUsage

  # TABLE 5: FamilyGroups - Family management across services
  FamilyGroupsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-family-groups-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: familyId
          AttributeType: S
        - AttributeName: parentUserId
          AttributeType: S
      KeySchema:
        - AttributeName: familyId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ParentUserIndex
          KeySchema:
            - AttributeName: parentUserId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Ecosystem
        - Key: DataType
          Value: FamilyGroups

  ####################################
  # Streaming Platform Tables
  ####################################

  # TABLE 6: Movies - Movie catalog and metadata
  MoviesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-movies-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: movieId
          AttributeType: S
        - AttributeName: genre
          AttributeType: S
        - AttributeName: releaseYear
          AttributeType: N
        - AttributeName: title
          AttributeType: S
      KeySchema:
        - AttributeName: movieId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: GenreIndex
          KeySchema:
            - AttributeName: genre
              KeyType: HASH
            - AttributeName: releaseYear
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: TitleIndex
          KeySchema:
            - AttributeName: title
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Stream
        - Key: DataType
          Value: Movies

  # TABLE 7: Watchlists - User watchlists and saved content
  WatchlistsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-watchlists-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: movieId
          AttributeType: S
        - AttributeName: profileId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: movieId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ProfileIndex
          KeySchema:
            - AttributeName: profileId
              KeyType: HASH
            - AttributeName: movieId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Stream
        - Key: DataType
          Value: Watchlists

  # TABLE 8: WatchHistory - User viewing history and progress
  WatchHistoryTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-watch-history-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: watchedAt
          AttributeType: S
        - AttributeName: profileId
          AttributeType: S
        - AttributeName: movieId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: watchedAt
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ProfileIndex
          KeySchema:
            - AttributeName: profileId
              KeyType: HASH
            - AttributeName: watchedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: MovieIndex
          KeySchema:
            - AttributeName: movieId
              KeyType: HASH
            - AttributeName: watchedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Stream
        - Key: DataType
          Value: WatchHistory

  # TABLE 9: ProfilesTable - User profiles within accounts (previously StreamingProfilesTable)
  ProfilesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "myai4-profiles-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: profileId
          AttributeType: S
        - AttributeName: accountId
          AttributeType: S
      KeySchema:
        - AttributeName: profileId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: AccountIndex
          KeySchema:
            - AttributeName: accountId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: MyAI4-Ecosystem
        - Key: DataType
          Value: Profiles

####################################
# Outputs
####################################
Outputs:
  ApiUrl:
    Description: URL of the MyAI4 centralized API
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/centralized"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  SubscriptionsTableName:
    Description: Name of the Subscriptions DynamoDB table
    Value: !Ref SubscriptionsTable
    Export:
      Name: !Sub "${AWS::StackName}-SubscriptionsTable"

  ServicePreferencesTableName:
    Description: Name of the ServicePreferences DynamoDB table
    Value: !Ref ServicePreferencesTable
    Export:
      Name: !Sub "${AWS::StackName}-ServicePreferencesTable"

  UserUsageTableName:
    Description: Name of the UserUsage DynamoDB table
    Value: !Ref UserUsageTable
    Export:
      Name: !Sub "${AWS::StackName}-UserUsageTable"

  FamilyGroupsTableName:
    Description: Name of the FamilyGroups DynamoDB table
    Value: !Ref FamilyGroupsTable
    Export:
      Name: !Sub "${AWS::StackName}-FamilyGroupsTable"

  MoviesTableName:
    Description: Name of the Movies DynamoDB table
    Value: !Ref MoviesTable
    Export:
      Name: !Sub "${AWS::StackName}-MoviesTable"

  WatchlistsTableName:
    Description: Name of the Watchlists DynamoDB table
    Value: !Ref WatchlistsTable
    Export:
      Name: !Sub "${AWS::StackName}-WatchlistsTable"

  WatchHistoryTableName:
    Description: Name of the WatchHistory DynamoDB table
    Value: !Ref WatchHistoryTable
    Export:
      Name: !Sub "${AWS::StackName}-WatchHistoryTable"

  ProfilesTableName:
    Description: Name of the Profiles DynamoDB table
    Value: !Ref ProfilesTable
    Export:
      Name: !Sub "${AWS::StackName}-ProfilesTable"
