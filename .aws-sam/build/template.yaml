AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Backend stack for the movie recommendation platform
Parameters:
  Environment:
    Type: String
    Description: The environment for this stack (e.g., dev, prod)
    AllowedValues:
    - dev
    - prod
    Default: dev
  RapidApiKeyParameter:
    Type: String
    Description: RapidAPI Key stored in AWS SSM Parameter Store
Globals:
  Function:
    Timeout: 10
    Runtime: python3.12
    MemorySize: 256
    Tags:
      Environment:
        Ref: Environment
      Project:
        Ref: AWS::StackName
Resources:
  UserPoolIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /streaming-platform-backend/user-pool-id
      Type: String
      Value:
        Fn::ImportValue: streaming-platform-infra-dev-UserPoolId
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            retry:
              command: "for i in {1..5}; do\n  aws ssm put-parameter --name \"/streaming-platform-backend/user-pool-id\"\
                \ --type String --value \"$(aws cloudformation describe-stacks --stack-name\
                \ streaming-platform-infra-dev --query 'Stacks[0].Outputs[?OutputKey==`UserPoolId`].OutputValue'\
                \ --output text)\" && break || sleep 10;\ndone\n"
  IdentityPoolIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /streaming-platform-backend/identity-pool-id
      Type: String
      Value:
        Fn::ImportValue: streaming-platform-infra-dev-IdentityPoolId
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            retry:
              command: "for i in {1..5}; do\n  aws ssm put-parameter --name \"/streaming-platform-backend/identity-pool-id\"\
                \ --type String --value \"$(aws cloudformation describe-stacks --stack-name\
                \ streaming-platform-infra-dev --query 'Stacks[0].Outputs[?OutputKey==`IdentityPoolId`].OutputValue'\
                \ --output text)\" && break || sleep 10;\ndone\n"
  CentralizedApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: centralized_api-${AWS::StackName}
      Handler: lambda_handler.lambda_handler
      CodeUri: CentralizedApiFunction
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Environment:
        Variables:
          RAPIDAPI_KEY:
            Ref: RapidApiKeyParameter
          USER_POOL_ID:
            Ref: UserPoolIdParameter
          IDENTITY_POOL_ID:
            Ref: IdentityPoolIdParameter
      Events:
        CentralizedApi:
          Type: Api
          Properties:
            Path: /centralized
            Method: GET
            RestApiId:
              Ref: ApiGateway
    Metadata:
      SamResourceId: CentralizedApiFunction
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Environment
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambda_exec_role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
      - PolicyName: SSMParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:PutParameter
            - ssm:GetParameter
            - ssm:DeleteParameter
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/streaming-platform-backend/*
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
  UserSettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: user_settings-backend-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: setting_key
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      - AttributeName: setting_key
        KeyType: RANGE
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
  WatchlistTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: watchlist-backend-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: movie_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      - AttributeName: movie_id
        KeyType: RANGE
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
  RatingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ratings-backend-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: movie_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      - AttributeName: movie_id
        KeyType: RANGE
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
  RecommendationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: recommendations-backend-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: movie_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      - AttributeName: movie_id
        KeyType: RANGE
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
  SearchCacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: search_cache-backend-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: search_query
        AttributeType: S
      - AttributeName: timestamp
        AttributeType: N
      KeySchema:
      - AttributeName: search_query
        KeyType: HASH
      - AttributeName: timestamp
        KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: expiration_time
        Enabled: true
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
      - Key: Project
        Value:
          Ref: AWS::StackName
Outputs:
  ApiUrl:
    Description: API Gateway Invoke URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/centralized
  UserSettingsTableName:
    Value:
      Ref: UserSettingsTable
  WatchlistTableName:
    Value:
      Ref: WatchlistTable
  RatingsTableName:
    Value:
      Ref: RatingsTable
  RecommendationsTableName:
    Value:
      Ref: RecommendationsTable
  SearchCacheTableName:
    Value:
      Ref: SearchCacheTable
